---
AWSTemplateFormatVersion: '2010-09-09'
Description: >

  This Cloudformation Template deploys the scalable option of the BigBlueButton application server.

  Disclaimer: Not for production use. Demo and testing purposes only.

  Author: David Surey <suredavi@amazon.com>, Bastian Klein <basklein@amazon.com>

Parameters:
  BBBOperatorEMail:
    Description: E-Mail address to notify if there are any operational issues
    Type: String
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: Must be a valid email address.
    Default: johndoe@example.com
  BBBNotificationTopic:
    Description: Topic to be used for alarm notifications
    Type: String
  BBBPublicApplicationSubnets:
    Description: Comma separated list of the appserver's subnets
    Type: CommaDelimitedList
  BBBApplicationInstanceType:
    Description: Instance type for the appserver
    Type: String
    Default: t3a.xlarge
    AllowedValues:
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5a.16xlarge
      - c5a.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.8xlarge
      - c5.12xlarge
      - c5.16xlarge
      - c5.24xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
  BBBApplicationDataVolumeSize: 
    Description: Size of the application instance data volume
    Type: Number
    Default: 20
  BBBApplicationMaxInstances:
    Type: Number
    Description: Maximum number of appserver instances
    Default: 3
  BBBApplicationMinInstances:
    Type: Number
    Description: Minimum number of appserver instances
    Default: 1
  BBBApplicationDesiredInstances:
    Type: Number
    Description: Desired number of appserver instances
    Default: 1
  BBBEnvironmentStage:
    Type: String
    Description: Select the appropriate environment
    Default: stage
    AllowedValues:
      - stage
      - prod
      - dev
  BBBTurnSecret:
    Description: Secret string for the Turn server
    Type: String
  BBBSharedStorageFS:
    Description: File system id for the Amazon EFS volume to be mounted
    Type: String
  BBBApplicationSecurityGroup:
    Description: Security Group that should be assigned for the appserver
    Type: String
  BBBHostedZone:
    Description: Hosted zone in which the DNS entries for the app servers should be created
    Type: String
  BBBDomainName:
    Description: Base domain name used for the instance
    Type: String
  BBBStackBucketStack:
    Description: S3 Bucket Stack that contains scripts and sources
    Type: String
  BBBECSCluster:
    Description: ECS Cluster reference
    Type: String
  BBBScaleliteTaskExecutionRole:
    Description: Task execution role used by the Scalelite ECS task
    Type: String
  BBBTurnHostnameParameter:
    Description: Parameter name that is used to store the Turn server host name
    Type: String
  BBBAuthLogLogGroup:
    Description: Log group to be used for the auth logs
    Type: String
  BBBSyslogLogGroup:
    Description: Log group to be used for the system logs
    Type: String
  BBBLetsEncryptLogGroup:
    Description: Log group to be used for the Let's Encrypt logs
    Type: String
  BBBLatestApplicationAmiId:
    Description: AMI id that should be used for the appserver instaces
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: 'bbbapplicationimageid'

Conditions:
  BBBProdEnvironment: !Equals [!Ref BBBEnvironmentStage, prod]
  BBBStageEnvironment: !Not [!Equals [!Ref BBBEnvironmentStage, prod]]

Resources:
  BBBApplicationAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref BBBPublicApplicationSubnets
      LaunchConfigurationName: !Ref BBBApplicationInstanceLaunchConfiguration
      TerminationPolicies:
        - DEFAULT
      MaxSize: !Ref BBBApplicationMaxInstances
      MinSize: !Ref BBBApplicationMinInstances
      DesiredCapacity: !Ref BBBApplicationDesiredInstances
      NotificationConfiguration:
        TopicARN:
          Ref: BBBNotificationTopic
        NotificationTypes:
          - autoscaling:EC2_INSTANCE_LAUNCH
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  BBBAkkaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/bbb-apps-akka/bbb-apps-akka.log
      RetentionInDays: 7

  BBBfseslLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/bbb-fsesl-akka/bbb-fsesl-akka.log
      RetentionInDays: 7

  BBBTranscodeLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/bbb-transcode-akka/bbb-transcode.log
      RetentionInDays: 7

  BBBWebRTCLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/bbb-webrtc-sfu/bbb-webrtc-sfu.log
      RetentionInDays: 7

  BBBWebAppLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/bigbluebutton/bbb-web.log
      RetentionInDays: 7

  BBBKurentoLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/kurento-media-server
      RetentionInDays: 7

  BBBMongoLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/mongodb/mongod.log
      RetentionInDays: 7

  BBBRedisLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/redis/redis-server.log
      RetentionInDays: 7

  BBBRed5LogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/red5
      RetentionInDays: 7

  BBBNginxLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /var/log/nginx
      RetentionInDays: 7

  BBBApplicationEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                Resource: !Sub "arn:aws:route53:::hostedzone/${BBBHostedZone}"
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Ref BBBTurnSecret
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub "arn:aws:s3:::${BBBStackBucketStack}/*"
              - Effect: Allow
                Action:
                  - ecs:ListTaskDefinitions
                  - ecs:ListClusters
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Condition:
                  ArnEquals:
                    ecs:cluster: !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${BBBECSCluster}"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Ref BBBScaleliteTaskExecutionRole
              - Effect: Allow
                Action:
                  - ssm:GetParameter 
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/turnhostname"
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                  - logs:GetLogEvents
                Resource:
                  - Fn::GetAtt: [ BBBAkkaLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBfseslLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBTranscodeLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBWebRTCLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBWebAppLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBKurentoLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBMongoLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBRedisLogGroup, Arn ]
                  - Fn::GetAtt: [ BBBRed5LogGroup, Arn ]
                  - Fn::GetAtt: [ BBBNginxLogGroup, Arn ]
                  - !Ref BBBAuthLogLogGroup
                  - !Ref BBBSyslogLogGroup
                  - !Ref BBBLetsEncryptLogGroup
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  BBBApplicationEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref BBBApplicationEC2Role

  BBBApplicationInstanceLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref BBBApplicationEC2InstanceProfile
      ImageId: !Ref BBBLatestApplicationAmiId
      EbsOptimized: true
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: 20
            Encrypted: true
        - DeviceName: /dev/sdf
          Ebs:
            VolumeSize: !Ref BBBApplicationDataVolumeSize
            VolumeType: gp2
            Encrypted: true
      InstanceMonitoring: true
      InstanceType: !Ref BBBApplicationInstanceType
      SecurityGroups:
        - !Ref BBBApplicationSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          apt update -y
          DEBIAN_FRONTEND='noninteractive' apt -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' full-upgrade

          apt autoremove -y
          apt clean
          apt autoclean

          apt install -y git binutils python3-pip python-pip build-essential python-dev python-setuptools jq

          pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          pip install -U awscli

          cd /tmp
          git clone https://github.com/aws/efs-utils
          cd efs-utils
          ./build-deb.sh
          apt-get -y install ./build/amazon-efs-utils*deb

          # Set instance Hostname
          instance_ipv4=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          instance_random=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 6 | head -n 1)
          instance_publichostname=vc-$instance_random
          instance_fqdn=$instance_publichostname.${BBBDomainName}

          # register in route53
          wget --tries=10 https://github.com/barnybug/cli53/releases/download/0.8.17/cli53-linux-amd64 -O /usr/local/bin/cli53
          sudo chmod +x /usr/local/bin/cli53

          # create script for route53-handler
          aws s3 cp s3://${BBBStackBucketStack}/route53-handler.service /etc/systemd/system/route53-handler.service
          aws s3 cp s3://${BBBStackBucketStack}/route53-handler.sh /usr/local/bin/route53-handler.sh
          chmod +x /usr/local/bin/route53-handler.sh

          sed -i "s/INSTANCE_PLACEHOLDER/$instance_publichostname/g" /etc/systemd/system/route53-handler.service
          sed -i "s/ZONE_PLACEHOLDER/${BBBHostedZone}/g" /etc/systemd/system/route53-handler.service

          systemctl daemon-reload
          systemctl enable route53-handler
          systemctl start route53-handler

          mkdir -p /mnt/bbb-recordings
          echo "${BBBSharedStorageFS}:/ /mnt/bbb-recordings efs defaults,tls,rw 0 0" >> /etc/fstab

          mkdir -p /var/bigbluebutton

          if test -e "/dev/nvme1n1"; then
            DEVICE=/dev/nvme1n1
            parted -s -a optimal -- $DEVICE mklabel gpt mkpart primary 1MiB -2048s
            sleep 20s
            mkfs.ext4 -F $DEVICE\p1 
            UUID=$(blkid |grep "$DEVICE\p1" | awk '{print $2}' |sed 's/"//g')
          else 
            DEVICE=/dev/sdf
            parted -s -a optimal -- $DEVICE mklabel gpt mkpart primary 1MiB -2048s
            sleep 20s
            mkfs.ext4 -F $DEVICE\1 
            UUID=$(blkid |grep "$DEVICE\1" | awk '{print $2}' |sed 's/"//g')
          fi

          echo "$UUID       /var/bigbluebutton   ext4    defaults,nofail        0       2" >> /etc/fstab
          mount -a


          turn_hostname=$(aws ssm get-parameter --region ${AWS::Region} --name "${BBBTurnHostnameParameter}" --with-decryption --output text --query Parameter.Value)
          turn_fqdn=$turn_hostname.${BBBDomainName}
          turnsecret=$(aws secretsmanager get-secret-value --region ${AWS::Region} --secret-id ${BBBTurnSecret} --query SecretString --output text | jq -r .turnkeyvalue)

          sleep 1m

          x=1
          while [ $x -le 5 ]
          do
            until host $instance_fqdn  | grep -m 1 "has address $instance_ipv4"; do sleep 5 ; done
            x=$(( $x + 1 ))
          done

          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BBBApplicationAutoScaling --region ${AWS::Region} || true 

          wget -qO- https://ubuntu.bigbluebutton.org/bbb-install.sh | bash -s -- -v xenial-220 -s $instance_fqdn -e ${BBBOperatorEMail} -c $turn_fqdn:$turnsecret
          
          # change the messages
          sed 's+Welcome to <b>%%CONFNAME%%</b>!<br><br>For help on using BigBlueButton see these (short) <a href="event:http://www.bigbluebutton.org/html5"><u>tutorial videos</u></a>.<br><br>To join the audio bridge click the phone button. Use a headset to avoid causing background noise for others.+Welcome to <b>%%CONFNAME%%</b>!<br><br>To join the audio bridge click the phone button. Use a headset to avoid causing background noise for others+' /usr/share/bbb-web/WEB-INF/classes/bigbluebutton.properties
          sed 's+This server is running <a href="http://docs.bigbluebutton.org/" target="_blank"><u>BigBlueButton</u></a>.+This server is running NoteMyMail Live+' /usr/share/bbb-web/WEB-INF/classes/bigbluebutton.properties
          
          wget --tries=10  https://raw.githubusercontent.com/blindsidenetworks/scalelite/master/bigbluebutton/scalelite_post_publish.rb -O /usr/local/bigbluebutton/core/scripts/post_publish/scalelite_post_publish.rb
          aws s3 cp s3://${BBBStackBucketStack}/scalelite-config.yml /usr/local/bigbluebutton/core/scripts/scalelite.yml

          # create script for scalelite-handler
          aws s3 cp s3://${BBBStackBucketStack}/scalelite-handler.service /etc/systemd/system/scalelite-handler.service
          aws s3 cp s3://${BBBStackBucketStack}/scalelite-handler.sh /usr/local/bin/scalelite-handler.sh
          chmod +x /usr/local/bin/scalelite-handler.sh

          SERVER="$(bbb-conf --secret | head -2 | tail -1 | sed -r 's/.*URL: //g')api"
          SECRET=$(bbb-conf --secret | head -3 | tail -1 | sed -r 's/.*Secret: //g')

          sed -i "s/SECRET_PLACEHOLDER/$SECRET/g" /etc/systemd/system/scalelite-handler.service
          sed -i "s|SERVER_PLACEHOLDER|$SERVER|g" /etc/systemd/system/scalelite-handler.service
          sed -i "s/AWSREGION_PLACEHOLDER/${AWS::Region}/g" /etc/systemd/system/scalelite-handler.service
          sed -i "s/ECSCLUSTER_PLACEHOLDER/${BBBECSCluster}/g" /etc/systemd/system/scalelite-handler.service

          systemctl daemon-reload
          systemctl enable scalelite-handler
          systemctl start scalelite-handler

          # create script for turn-handler
          aws s3 cp s3://${BBBStackBucketStack}/turn-handler.service /etc/systemd/system/turn-handler.service
          aws s3 cp s3://${BBBStackBucketStack}/turn-handler.timer /etc/systemd/system/turn-handler.timer
          aws s3 cp s3://${BBBStackBucketStack}/turn-handler.sh /usr/local/bin/turn-handler.sh
          chmod +x /usr/local/bin/turn-handler.sh

          sed -i "s/AWSREGION_PLACEHOLDER/${AWS::Region}/g" /etc/systemd/system/turn-handler.service
          sed -i "s|PARAMETER_PLACEHOLDER|${BBBTurnHostnameParameter}|g" /etc/systemd/system/turn-handler.service

          systemctl daemon-reload
          systemctl enable turn-handler.timer
          systemctl start turn-handler.timer

          curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O
          chmod +x ./awslogs-agent-setup.py
          ./awslogs-agent-setup.py -n -r ${AWS::Region} -c s3://${BBBStackBucketStack}/bbb-cwagent.config
          systemctl enable awslogs

Outputs:
  BBBAkkaLogGroup:
    Description: Big Blue Button Akka Log Group
    Value:
      Ref: BBBAkkaLogGroup
  BBBfseslLogGroup:
    Description: Big Blue Button FSESl Log Group
    Value:
      Ref: BBBfseslLogGroup
  BBBTranscodeLogGroup:
    Description: Big Blue Button Transcode Log Group
    Value:
      Ref: BBBTranscodeLogGroup
  BBBWebRTCLogGroup:
    Description: Big Blue Button WebRTC Log Group
    Value:
      Ref: BBBTranscodeLogGroup
  BBBWebAppLogGroup:
    Description: Big Blue Button WebApp Log Group
    Value:
      Ref: BBBWebAppLogGroup
  BBBKurentoLogGroup:
    Description: Big Blue Button Kurento Log Group
    Value:
      Ref: BBBKurentoLogGroup
  BBBMongoLogGroup:
    Description: Big Blue Button MongoDB Log Group
    Value:
      Ref: BBBMongoLogGroup
  BBBRedisLogGroup:
    Description: Big Blue Button Redis Log Group
    Value:
      Ref: BBBRedisLogGroup
  BBBRed5LogGroup:
    Description: Big Blue Button Red5 Log Group
    Value:
      Ref: BBBRed5LogGroup
  BBBNginxLogGroup:
    Description: Big Blue Button Nginx Log Group
    Value:
      Ref: BBBNginxLogGroup
  BBBApplicationEC2InstanceProfile:
    Description: Big Blue Button Application Instance Profile
    Value:
      Ref: BBBApplicationEC2InstanceProfile
  BBBApplicationEC2Role: 
    Description: Big Blue Button Application Instance Role
    Value:
      Ref: BBBApplicationEC2Role
  BBBApplicationAutoScaling: 
    Description: Big Blue Button Application Instance Autoscaling Group
    Value:
      Ref: BBBApplicationAutoScaling
  BBBApplicationInstanceLaunchConfiguration: 
    Description: Big Blue Button Application Instance Launch Configuration
    Value:
      Ref: BBBApplicationInstanceLaunchConfiguration
